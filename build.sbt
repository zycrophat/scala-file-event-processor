enablePlugins(GitVersioning)

name := "scala-file-event-processor"

val azureFeeds = "scalafeed" :: Nil
def readCredentialsFromMavenSettings() = {
  import scala.xml.XML
  // import credentials from settings.xml generated by Azure Pipeline MavenAuthenticate task
  val xml = XML.loadFile(Path.userHome / ".m2" / "settings.xml")
  val servers = xml \\ "server"

  for (
    server <- servers;
    username <- server \ "username" map { _.text };
    password <- server \ "password" map { _.text }
  ) yield Credentials("", "pkgs.dev.azure.com", username, password)
}

ThisBuild / credentials += Credentials("", "pkgs.dev.azure.com", "scalafeed", sys.env.getOrElse("SYSTEM_ACCESSTOKEN", ""))

lazy val commonSettings =
  (scalaVersion := "2.13.3") ::
  (organization  := "com.github.zycrophat") ::
  (maintainer := "Andreas Steffan") ::
  (git.useGitDescribe := true) ::
  (coverageEnabled.in(Test, test) := true) ::
  (coverageEnabled in(Compile, compile) := false) ::
  (publishMavenStyle := true) ::
    (publishTo := {
      val mavenRepositoryLocation = "https://pkgs.dev.azure.com/zycrophat/scala-file-event-processor/_packaging/scalafeed/maven/v1"
      if (isSnapshot.value)
        Some("snapshots" at mavenRepositoryLocation)
      else
        Some("releases"  at mavenRepositoryLocation)
    }) ::
  Nil

publishArtifact := false

lazy val root = (project in file("."))
  .aggregate(scalaFileEventProcessorFunction)
  .settings(commonSettings)

lazy val scalaFileEventProcessorFunction = (project in file("scala-file-event-processor-function"))
  .settings(commonSettings)
